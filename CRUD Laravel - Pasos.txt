Crear proyecto:
	composer create-project laravel/laravel example-app
	cd example-app
Ejecutar:
	composer install
Crear archivo de configuracion de pruebas:
	cp .env.example .env
Instalar en VSCode 'Laravel Extension Pack'
Generar API Key (Se genera en el archivo .env):
	php artisan key:generate
Generamos una nueva ruta en /routes/web.php:
    Route::get('/recordings/{name}/{year?}', function ($name, $year = null) {
        return view('pages.recordings', compact('name', 'year'));
    });
Creamos la vista en /resources/views/pages/nombrearchivo.blade.php:
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Grabaciones</title>
    </head>
    <body>
        <h1>Grabaciones de {{$name}}</h1>
        <h2>
            @if(isset($year))
                Año {{$year}}
            @else
                Todo los Años
            @endif
        </h2>
    </body>
    </html>
Prueba la API como (Ambas deben funcionar): 
	http://example-app.test/recordings/Jesus Alejandro/2022
	http://example-app.test/recordings/Jesus Alejandro

Creamos una base de datos para el proyecto (Usar terminal):
	mysql -uroot
	show databases;
	CREATE DATABASE `db_example-app`;
Cambiar la configuracion de la base de datos en .env:
	DB_CONNECTION=mysql
	DB_HOST=127.0.0.1
	DB_PORT=3306
	DB_DATABASE=db_example-app
	DB_USERNAME=root
	DB_PASSWORD=
Crear la tabla en base y respaldarlo en /databases/migrations (usar terminal):
	php artisan make:migration create_videos_table
	(Se genera en automatico un archivo en /databases/migrations)
	(Eliminamos los demas archivos en /databases/migrations)
Entramos al archivo dentro de /databases/migrations y creamos campos:
	Referencia: https://laravel.com/docs/9.x/migrations	
	Archivo:
	    public function up() {
                Schema::create('videos', function (Blueprint $table) {
                    $table->id();
                    $table->string('class', 100);
                    $table->string('theme', 150);
                    $table->string('duration', 50);
                    $table->string('size', 100);
                    $table->timestamps();
                });
            }
Ejecutamos la migración:
	php artisan migrate:install (Este comando crea la tabla de historial de migraciones)
	php artisan migrate (Este comando crea las tablas)
Podemos revisar en mysql los cambios:
	mysql -uroot -- Iniciamos otra terminal para revisar la base de datos
	use `db_example-app`; -- Nos movemos a nuestra base de datos
	show tables; -- Muestra todas las tablas
	describe videos; -- Observamos los campos creados de la tabla
	select * from migrations; -- Muestra las migraciones realizadas
Modificamos la migracion de videos en /databases/migrations:
	Archivo:
            public function up()
            {
                Schema::create('videos', function (Blueprint $table) {
                    $table->id();
                    $table->string('class', 100);
                    $table->string('theme', 150);
                    $table->string('duration', 50);
                    $table->string('size', 100);
                    $table->date('broadcast_date');
                });
            }
Actualizamos la tabla:
	php artisan migrate:rollback
	php artisan migrate
Crear un seeder para una clase Videos (Se crea en /database/seeder):
	Referencia: https://laravel.com/docs/9.x/seeding
	php artisan make:seeder VideosSeeder
Insertamos datos de prueba en el seeder (/database/seeder/VideosSeeder.php):
	Agregar metodo al archivo:
	    public function run()
            {
                DB::table('videos')->insert([
                    'class' => 'Programacion para Internet',
                    'theme' => 'CRUD Basico Laravel',
                    'duration' => '5 horas',
                    'size' => '1.5 GB',
                    'broadcast_date' => now()
                ]);
            }
Ejecutamos la insercion (terminal):
	php artisan db:seed --class=VideosSeeder
Revisamos en mysql:
	mysql -uroot 
	use `db_example-app`; 
	select * from videos; 
Creamos una ejecucion general para clases masivas (/database/seeder/DatabaseSeeder.php):
	Agregar al metodo:
	    public function run()
            {
                $this->call([
                    VideosSeeder::class
                ]);
            }
Mostramos ahora la tabla en nuestra ruta:
	(Nos movemos a la ruta /routes/web.php)
	Modificamos el metodo:
            Route::get('/recordings/{name}/{year?}', function ($name, $year = null) {

                if($year == null)
                    $videos = DB::table('videos')->get();
                else
                    $videos = DB::table('videos')
                                ->whereYear('broadcast_date', $year)
                                ->get();

                return view('pages.recordings', compact('name', 'year', 'videos'));
            });
	(Nos movemos a la ruta /resources/views/pages/recordings.blade.php)
	Agregamos la tabla:
	     <table class="table">
                <tr>
                    <th>Registro</th>
                    <th>Clase</th>
                    <th>Tema</th>
                    <th>Duracion</th>
                    <th>Tamaño</th>
                    <th>Emision</th>
                </tr>
                @foreach ($videos as $video)
                    <tr>
                        <td>{{ $video->id }}</td>
                        <td>{{ $video->class }}</td>
                        <td>{{ $video->theme }}</td>
                        <td>{{ $video->duration }}</td>
                        <td>{{ $video->size }}</td>
                        <td>{{ $video->broadcast_date }}</td>
                    </tr>
                @endforeach
            </table>

            <style>

                @import url('https://fonts.googleapis.com/css2?family=Rubik+Beastly&display=swap');

                table, th, td {
                    font-family: 'Bebas Neue', sans-serif;
                    font-size: 15px;
                    border: 1px solid black;
                    border-collapse: collapse;
                    padding: 5px 25px;
                }

            </style>

Prueba la API como (Ambas deben funcionar): 
	http://example-app.test/recordings/Jesus Alejandro/2022
	http://example-app.test/recordings/Jesus Alejandro

Creamos una nueva ruta para crear registros:
	(Nos movemos a la ruta /routes/web.php)
	Creamos el metodo:
            Route::get('/recordings-create', function () {
                return view('pages.recordings-form');
            });
	(Nos movemos a la ruta /resources/views/pages/)
	Creamos un el archivo recordings-form.blade.php:
	    <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <meta http-equiv="X-UA-Compatible" content="ie=edge">
                <title>Agregar Grabacion</title>
            </head>
            <body>
                <form action="/video" method="POST" >
                    <h1>Registra tu clase</h1>
                    <label for="video">Selecciona tu video:</label> <br>
                    <input type="file" id="video" name="video"> <br>

                    <label for="class">
                        <input id="class" type="text" placeholder="Clase" required> <br>
                    </label>
                    <label for="theme">
                        <input id="theme" type="text" placeholder="Tema" required> <br>
                    </label>
                    <label for="duracion">
                        <input id="duracion" type="text" placeholder="Duracion" required> <br>
                    </label>
                    <label for="size">
                        <input id="size" type="text" placeholder="Tamaño del archivo" required> <br>
                    </label>
                    <button type="submit">Enviar</button> <br>
                </form>

                <style>

                    form {
                        width: 500px;
                        padding: 20px;
                        margin: auto;
                        text-align: center;
                    }

                    input {
                        width: 80%;
                        margin: 5px;
                        padding: 15px;
                    }

                    button {
                        margin: 10px;
                        padding: 5px;
                        width: 50%;
                        cursor: pointer;
                    }

                </style>

            </body>
            </html>

Generamos la inserción de datos:
	Borramos los archivos de /databases/migrations y ejecutamos:
		php artisan migrate:rollback
	Generamos un modelo, controlador y migracion para videos:
		php artisan make:model Video -mcr
	(Nos movemos a la migracion de videos en /databases/migrations)
	Modificamos el metodo up:
            public function up()
            {
                Schema::create('videos', function (Blueprint $table) {
                    $table->id();
                    $table->string('class', 100);
                    $table->string('theme', 150);
                    $table->string('duration', 50);
                    $table->string('size', 100);
                    $table->date('broadcast_date');
                });
            }
	(Nos movemos al archivo app/Models/Videos.php)
	Deshabilitamos el timestamp:                
            class Video extends Model
            {
                use HasFactory;
                public $timestamps = false;
            }
	(Nos movemos al archivo app/Http/Controllers/VideosController.php)
	Debemos de tener importadas las sig. librerias:
            use App\Models\Video;
            use Illuminate\Http\Request;
            use Illuminate\Support\Facades\DB;
	Y modificada las funciones:
            public function index()
            {
                $videos = Video::all();
                return view('pages.recordings-index', compact('videos'));
            }
            public function create()
            {
                return view('pages.recordings-form');
            }
            public function store(Request $request)
            {
                $request->validate([
                    'class' => 'required|min:5|max:150',
                    'theme' => ['required', 'min:5'],
                    'duration' => 'required|min:5|max:100',
                    'size' => 'required|min:5|max:15',
                ]);


                $video = new Video();
                $video->class = $request->class;
                $video->theme = $request->theme;
                $video->duration = $request->duration;
                $video->size = $request->size;
                $video->broadcast_date = now();
                $video->save();

                return redirect('/video');
            }		
	(Nos movemos a la ruta /routes/web.php)
	Debemos de tener importadas las sig. librerias:
            use App\Models\Video;
            use Illuminate\Support\Facades\DB;
            use Illuminate\Support\Facades\Route;
            use App\Http\Controllers\VideoController;
	Modificamos las rutas:
            Route::get('/recordings/{name}/{year?}', function ($name, $year = null) {

                if($year == null)
                    $videos = Video::all();
                else
                    $videos = Video::whereYear('broadcast_date', $year)->get();

                return view('pages.recordings', compact('name', 'year', 'videos'));
            });

            Route::resource('/video', VideoController::class);

	(Nos movemos a la ruta /resources/views/pages/)
	Creamos un el archivo recordings-index.blade.php:
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta http-equiv="X-UA-Compatible" content="IE=edge">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Videos</title>
            </head>
            <body>
                <h1>Todas las Grabaciones</h1>
                <h2>Clases subidas</h2>

                <table class="table">
                    <tr>
                        <th>Registro</th>
                        <th>Clase</th>
                        <th>Tema</th>
                        <th>Duracion</th>
                        <th>Tamaño</th>
                        <th>Emision</th>
                    </tr>
                    @foreach ($videos as $video)
                        <tr>
                            <td>{{ $video->id }}</td>
                            <td>{{ $video->class }}</td>
                            <td>{{ $video->theme }}</td>
                            <td>{{ $video->duration }}</td>
                            <td>{{ $video->size }}</td>
                            <td>{{ $video->broadcast_date }}</td>
                        </tr>
                    @endforeach
                </table>

                <style>

                    @import url('https://fonts.googleapis.com/css2?family=Rubik+Beastly&display=swap');

                    table, th, td {
                        font-family: 'Bebas Neue', sans-serif;
                        font-size: 15px;
                        border: 1px solid black;
                        border-collapse: collapse;
                        padding: 5px 25px;
                    }

                </style>

            </body>
            </html>
	
	(Modificacmos el archivo recordings-form.blade.php)
	Agregamos arriba del formulario:
            <body>

                @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
                @endif
	
	Modificamos el formulario:
                <form action="/video" method="POST" >

                    @csrf
                    <h1>Registra tu clase</h1>
                    <label for="video">Selecciona tu video:</label> <br>
                    <input type="file" id="video" name="video"> <br>

                    <label for="class">
                        <input id="class" name="class" type="text" placeholder="Clase" required> <br>
                    </label>
                    <label for="theme">
                        <input id="theme" name="theme" type="text" placeholder="Tema" required> <br>
                    </label>
                    <label for="duracion">
                        <input id="duracion" name='duration' type="text" placeholder="Duracion" required> <br>
                    </label>
                    <label for="size">
                        <input id="size" name="size" type="text" placeholder="Tamaño del archivo" required> <br>
                    </label>
                    <button type="submit">Enviar</button>
                </form>
	Actualizamos cambios en la base (terminal):
		php artisan migrate
		php artisan db:seed
	Probamos:
		http://example-app.test/video/create
Creamos busquedas y link para crear registro:
	(Nos movemos al archivo App/Htpp/Controllers/VideoController)
	Modificamos el metodo:
            public function show(Video $video)
            {
                return view('pages.show-recordings', compact('video'));
            }
	Creamos una vista llamada show-recordings.blade.php en resources/view/pages:
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta http-equiv="X-UA-Compatible" content="IE=edge">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Buscar Videos</title>
            </head>
            <body>
                <h1>Grabacion</h1>
                <h2>Busqueda: {{ $video->id }} </h2>

                <table class="table">
                    <tr>
                        <th>Registro</th>
                        <th>Clase</th>
                        <th>Tema</th>
                        <th>Duracion</th>
                        <th>Tamaño</th>
                        <th>Emision</th>
                    </tr>
                    <tr>
                        <td>{{ $video->id }}</td>
                        <td>{{ $video->class }}</td>
                        <td>{{ $video->theme }}</td>
                        <td>{{ $video->duration }}</td>
                        <td>{{ $video->size }}</td>
                        <td>{{ $video->broadcast_date }}</td>
                    </tr>
                </table>

                <style>

                    @import url('https://fonts.googleapis.com/css2?family=Rubik+Beastly&display=swap');

                    table, th, td {
                        font-family: 'Bebas Neue', sans-serif;
                        font-size: 15px;
                        border: 1px solid black;
                        border-collapse: collapse;
                        padding: 5px 25px;
                    }

                </style>

            </body>
            </html>

	Modificamos la tabla en resources/view/pages (recordings.blade.php & recordings-index.blade.php):
            <p> <a href="video/create"> Subir Clase </a> </p>

            <table class="table">
                <tr>
                    <th>Registro</th>
                    <th>Clase</th>
                    <th>Tema</th>
                    <th>Duracion</th>
                    <th>Tamaño</th>
                    <th>Emision</th>
                    <th>Acciones</th>
                </tr>
                @foreach ($videos as $video)
                    <tr>
                        <td>{{ $video->id }}</td>
                        <td>{{ $video->class }}</td>
                        <td>{{ $video->theme }}</td>
                        <td>{{ $video->duration }}</td>
                        <td>{{ $video->size }}</td>
                        <td>{{ $video->broadcast_date }}</td>
                        <td> <a href="video/{{$video->id}}"> Ver detalles </a> </td>
                    </tr>
                @endforeach
            </table>

Creamos boton de edición y eliminacion:
	(Nos movemos al archivo App/Htpp/Controllers/VideoController)
	Modificamos los metodos:
            public function edit(Video $video)
            {
                return view('pages.recordings-form', compact('video'));
            }

            public function update(Request $request, Video $video)
            {
                $request->validate([
                    'class' => 'required|min:5|max:150',
                    'theme' => ['required', 'min:5'],
                    'duration' => 'required|min:5|max:100',
                    'size' => 'required|min:5|max:15',
                ]);

                $video->class = $request->class;
                $video->theme = $request->theme;
                $video->duration = $request->duration;
                $video->size = $request->size;
                $video->broadcast_date = now();
                $video->save();

                return redirect('/video');
            }

            public function destroy(Video $video)
            {
                $video->delete();
                return redirect('/video');
            }
	
	Modificamos la tabla en resources/view/pages (recordings.blade.php & recordings-index.blade.php):
            <table class="table">
                <tr>
                    <th>Registro</th>
                    <th>Clase</th>
                    <th>Tema</th>
                    <th>Duracion</th>
                    <th>Tamaño</th>
                    <th>Emision</th>
                    <th>Acciones</th>
                </tr>
                @foreach ($videos as $video)
                    <tr>
                        <td>{{ $video->id }}</td>
                        <td>{{ $video->class }}</td>
                        <td>{{ $video->theme }}</td>
                        <td>{{ $video->duration }}</td>
                        <td>{{ $video->size }}</td>
                        <td>{{ $video->broadcast_date }}</td>
                        <td>
                            <a href="video/{{$video->id}}"> Ver detalles </a>
                            <a href="video/{{$video->id}}/edit"> Editar </a>
                            <form action="video/{{$video->id}}" method="POST">
                                @csrf
                                @method('DELETE')
                                <input type="submit" value="Borrar">
                            </form>
                        </td>
                    </tr>
                @endforeach
            </table>

	Modificamos el formulario en resources/view/pages (recordings-form.blade.php):
            @isset($video)
                <form action="/video/{{ $video->id }}" method="POST" > {{-- Editar --}}
                @method('PATCH')
            @else
                <form action="/video" method="POST" > {{-- Crear --}}
            @endisset

                    @csrf
                    <h1>Registra tu clase</h1>
                    <label for="video">Selecciona tu video:</label> <br>
                    <input type="file" id="video" name="video"> <br>

                    <label for="class">
                        <input id="class" name="class" type="text" placeholder="Clase" 
                        value="{{ isset($video) ? $video->class : ''}}" required> <br>
                    </label>
                    <label for="theme">
                        <input id="theme" name="theme" type="text" placeholder="Tema" 
                        value="{{ isset($video) ? $video->theme : ''}}" required> <br>
                    </label>
                    <label for="duracion">
                        <input id="duracion" name='duration' type="text" placeholder="Duracion" 
                        value="{{ isset($video) ? $video->duration : ''}}" required> <br>
                    </label>
                    <label for="size">
                        <input id="size" name="size" type="text" placeholder="Tamaño del archivo" 
                        value="{{ isset($video) ? $video->size : ''}}" required> <br>
                    </label>
                    <button type="submit">Enviar</button>
                </form>
Generamos un Login:
	Detenmos el servicio laragon
	Instalamos jetstream (/laragon/www/example-app):
		composer require laravel/jetstream
	Generamos vistas, migraciones, relaciones, etc. en jetstream:
		php artisan jetstream:install livewire
	Ejecutamos los cambios:
		npm install
		npm run dev
		php artisan migrate
	Ya deberiamos de tener boton login y Register:
		Registrate
		Ingresa
	Redireccionar despues del login es:
		(/config/fortify.php)
			'home' => RouteServiceProvider::HOME,
		cambiar por:
			'home' => '/index',
	Referencia: https://jetstream.laravel.com/2.x/features/authentication.html#laravel-fortify		
	Modificamos la plantilla Login:
	(Nos movemos a /resources/views/layouts)
	Modificamos el metodo app.blade.php:

Creamos un pantilla:

	php artisan make:component layout

	(Nos movemos a /resources/views/components/layout.blade.php)
            <div>
                <h3>Seccion:</h3>
                {{ $slot }}
            </div>
	Generamos 2 archivos en views:
		home.blade.php
                    <div>
                        <h1>Seccion:</h1>
                        {{ $slot }}
                    </div>

		contact.blade.php
                    <x-layout>
                        <h1>Pagina Contacto</h1>
                    </x-layout>

	Generamos las rutas en /routes/web.php:

            Route::get('/home', function () {
                return view('home');
            });

            Route::get('/contact', function () {
                return view('contact');
            });

	Revisamos las vistas:
		http://example-app.test/home
		http://example-app.test/contact

Agregamos un template:
	Descargamos: https://github.com/ColorlibHQ/gentelella
	Modificamos el layout /resources/views/components/layout.blade.php:

-------------------------------------------

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Gentelella Alela! | </title>

    <!-- Bootstrap -->
    <link href="../vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="../vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <!-- NProgress -->
    <link href="../vendors/nprogress/nprogress.css" rel="stylesheet">

    <!-- Custom Theme Style -->
    <link href="../build/css/custom.min.css" rel="stylesheet">
  </head>

  <body class="nav-md">
    <div class="container body">
      <div class="main_container">
        <div class="col-md-3 left_col">
          <div class="left_col scroll-view">
            <div class="navbar nav_title" style="border: 0;">
              <a href="index.html" class="site_title"><i class="fa fa-paw"></i> <span>Gentelella Alela!</span></a>
            </div>

            <div class="clearfix"></div>

            <!-- menu profile quick info -->
            <div class="profile clearfix">
              <div class="profile_pic">
                <img src="images/img.jpg" alt="..." class="img-circle profile_img">
              </div>
              <div class="profile_info">
                <span>Welcome,</span>
                <h2>John Doe</h2>
              </div>
              <div class="clearfix"></div>
            </div>
            <!-- /menu profile quick info -->

            <br />

            <!-- sidebar menu -->
            <div id="sidebar-menu" class="main_menu_side hidden-print main_menu">
              <div class="menu_section">
                <h3>General</h3>
                <ul class="nav side-menu">
                  <li><a><i class="fa fa-home"></i> Home <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="index.html">Dashboard</a></li>
                      <li><a href="index2.html">Dashboard2</a></li>
                      <li><a href="index3.html">Dashboard3</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-edit"></i> Forms <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="form.html">General Form</a></li>
                      <li><a href="form_advanced.html">Advanced Components</a></li>
                      <li><a href="form_validation.html">Form Validation</a></li>
                      <li><a href="form_wizards.html">Form Wizard</a></li>
                      <li><a href="form_upload.html">Form Upload</a></li>
                      <li><a href="form_buttons.html">Form Buttons</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-desktop"></i> UI Elements <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="general_elements.html">General Elements</a></li>
                      <li><a href="media_gallery.html">Media Gallery</a></li>
                      <li><a href="typography.html">Typography</a></li>
                      <li><a href="icons.html">Icons</a></li>
                      <li><a href="glyphicons.html">Glyphicons</a></li>
                      <li><a href="widgets.html">Widgets</a></li>
                      <li><a href="invoice.html">Invoice</a></li>
                      <li><a href="inbox.html">Inbox</a></li>
                      <li><a href="calendar.html">Calendar</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-table"></i> Tables <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="tables.html">Tables</a></li>
                      <li><a href="tables_dynamic.html">Table Dynamic</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-bar-chart-o"></i> Data Presentation <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="chartjs.html">Chart JS</a></li>
                      <li><a href="chartjs2.html">Chart JS2</a></li>
                      <li><a href="morisjs.html">Moris JS</a></li>
                      <li><a href="echarts.html">ECharts</a></li>
                      <li><a href="other_charts.html">Other Charts</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-clone"></i>Layouts <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="fixed_sidebar.html">Fixed Sidebar</a></li>
                      <li><a href="fixed_footer.html">Fixed Footer</a></li>
                    </ul>
                  </li>
                </ul>
              </div>
              <div class="menu_section">
                <h3>Live On</h3>
                <ul class="nav side-menu">
                  <li><a><i class="fa fa-bug"></i> Additional Pages <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="e_commerce.html">E-commerce</a></li>
                      <li><a href="projects.html">Projects</a></li>
                      <li><a href="project_detail.html">Project Detail</a></li>
                      <li><a href="contacts.html">Contacts</a></li>
                      <li><a href="profile.html">Profile</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-windows"></i> Extras <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                      <li><a href="page_403.html">403 Error</a></li>
                      <li><a href="page_404.html">404 Error</a></li>
                      <li><a href="page_500.html">500 Error</a></li>
                      <li><a href="plain_page.html">Plain Page</a></li>
                      <li><a href="login.html">Login Page</a></li>
                      <li><a href="pricing_tables.html">Pricing Tables</a></li>
                    </ul>
                  </li>
                  <li><a><i class="fa fa-sitemap"></i> Multilevel Menu <span class="fa fa-chevron-down"></span></a>
                    <ul class="nav child_menu">
                        <li><a href="#level1_1">Level One</a>
                        </li>
                        <li><a>Level One<span class="fa fa-chevron-down"></span></a>
                          <ul class="nav child_menu">
                            <li class="sub_menu"><a href="level2.html">Level Two</a>
                            </li>
                            <li><a href="#level2_1">Level Two</a>
                            </li>
                            <li><a href="#level2_2">Level Two</a>
                            </li>
                          </ul>
                        </li>
                        <li><a href="#level1_2">Level One</a>
                        </li>
                    </ul>
                  </li>
                  <li><a href="javascript:void(0)"><i class="fa fa-laptop"></i> Landing Page <span class="label label-success pull-right">Coming Soon</span></a></li>
                </ul>
              </div>

            </div>
            <!-- /sidebar menu -->

            <!-- /menu footer buttons -->
            <div class="sidebar-footer hidden-small">
              <a data-toggle="tooltip" data-placement="top" title="Settings">
                <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
              </a>
              <a data-toggle="tooltip" data-placement="top" title="FullScreen">
                <span class="glyphicon glyphicon-fullscreen" aria-hidden="true"></span>
              </a>
              <a data-toggle="tooltip" data-placement="top" title="Lock">
                <span class="glyphicon glyphicon-eye-close" aria-hidden="true"></span>
              </a>
              <a data-toggle="tooltip" data-placement="top" title="Logout" href="login.html">
                <span class="glyphicon glyphicon-off" aria-hidden="true"></span>
              </a>
            </div>
            <!-- /menu footer buttons -->
          </div>
        </div>

        <!-- top navigation -->
        <div class="top_nav">
            <div class="nav_menu">
                <div class="nav toggle">
                  <a id="menu_toggle"><i class="fa fa-bars"></i></a>
                </div>
                <nav class="nav navbar-nav">
                <ul class=" navbar-right">
                  <li class="nav-item dropdown open" style="padding-left: 15px;">
                    <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" id="navbarDropdown" data-toggle="dropdown" aria-expanded="false">
                      <img src="images/img.jpg" alt="">John Doe
                    </a>
                    <div class="dropdown-menu dropdown-usermenu pull-right" aria-labelledby="navbarDropdown">
                      <a class="dropdown-item"  href="javascript:;"> Profile</a>
                        <a class="dropdown-item"  href="javascript:;">
                          <span class="badge bg-red pull-right">50%</span>
                          <span>Settings</span>
                        </a>
                    <a class="dropdown-item"  href="javascript:;">Help</a>
                      <a class="dropdown-item"  href="login.html"><i class="fa fa-sign-out pull-right"></i> Log Out</a>
                    </div>
                  </li>

                  <li role="presentation" class="nav-item dropdown open">
                    <a href="javascript:;" class="dropdown-toggle info-number" id="navbarDropdown1" data-toggle="dropdown" aria-expanded="false">
                      <i class="fa fa-envelope-o"></i>
                      <span class="badge bg-green">6</span>
                    </a>
                    <ul class="dropdown-menu list-unstyled msg_list" role="menu" aria-labelledby="navbarDropdown1">
                      <li class="nav-item">
                        <a class="dropdown-item">
                          <span class="image"><img src="images/img.jpg" alt="Profile Image" /></span>
                          <span>
                            <span>John Smith</span>
                            <span class="time">3 mins ago</span>
                          </span>
                          <span class="message">
                            Film festivals used to be do-or-die moments for movie makers. They were where...
                          </span>
                        </a>
                      </li>
                      <li class="nav-item">
                        <a class="dropdown-item">
                          <span class="image"><img src="images/img.jpg" alt="Profile Image" /></span>
                          <span>
                            <span>John Smith</span>
                            <span class="time">3 mins ago</span>
                          </span>
                          <span class="message">
                            Film festivals used to be do-or-die moments for movie makers. They were where...
                          </span>
                        </a>
                      </li>
                      <li class="nav-item">
                        <a class="dropdown-item">
                          <span class="image"><img src="images/img.jpg" alt="Profile Image" /></span>
                          <span>
                            <span>John Smith</span>
                            <span class="time">3 mins ago</span>
                          </span>
                          <span class="message">
                            Film festivals used to be do-or-die moments for movie makers. They were where...
                          </span>
                        </a>
                      </li>
                      <li class="nav-item">
                        <a class="dropdown-item">
                          <span class="image"><img src="images/img.jpg" alt="Profile Image" /></span>
                          <span>
                            <span>John Smith</span>
                            <span class="time">3 mins ago</span>
                          </span>
                          <span class="message">
                            Film festivals used to be do-or-die moments for movie makers. They were where...
                          </span>
                        </a>
                      </li>
                      <li class="nav-item">
                        <div class="text-center">
                          <a class="dropdown-item">
                            <strong>See All Alerts</strong>
                            <i class="fa fa-angle-right"></i>
                          </a>
                        </div>
                      </li>
                    </ul>
                  </li>
                </ul>
              </nav>
            </div>
          </div>
        <!-- /top navigation -->

        <!-- page content -->

        <h1>  {{ $slot }} </h1>

        <style>
            h1 {
                text-align: center;
            }
        </style>

<!-- footer content -->
<footer>
    <div class="pull-right">
      Gentelella - Bootstrap Admin Template by <a href="https://colorlib.com">Colorlib</a>
    </div>
    <div class="clearfix"></div>
  </footer>
  <!-- /footer content -->
</div>
</div>

<!-- jQuery -->
<script src="../vendors/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap -->
<script src="../vendors/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<!-- FastClick -->
<script src="../vendors/fastclick/lib/fastclick.js"></script>
<!-- NProgress -->
<script src="../vendors/nprogress/nprogress.js"></script>

<!-- Custom Theme Scripts -->
<script src="../build/js/custom.min.js"></script>
</body>
</html>


-------------------------------------------

	Copiamos la carpeta vendors del proyecto git a example-app/public
	Copiamos la carpeta build del proyecto git a example-app/public
	Copiamos la imagen de production/images/img.jpg a example-app/public/images	
	
	Revisamos las vistas:
		http://example-app.test/home
		http://example-app.test/contact

Extras:
	Ver las rutas:
		php artisan route:list
	Otra forma de hacer rutas de clases:
		Route::get('/recordings-create', [VideoController::class, 'create']);
		Route::post('/recordings-store', [VideoController::class, 'store']);	
	Crea controlador en base a un modelo:
		php artisan make:controller VideosController -r --model=Video
	Crea un modelo simple:
		php artisan make:model Video
	